# Generated by Selenium IDE
import random
import string
import time
from django.test import TestCase
from selenium import webdriver
from selenium.webdriver.common.by import By
from selenium.webdriver.common.action_chains import ActionChains
from selenium.webdriver.support import expected_conditions as EC
from selenium.webdriver.support.wait import WebDriverWait
from selenium.webdriver.common.keys import Keys
from selenium.webdriver.common.desired_capabilities import DesiredCapabilities

class TestFunctionalUser(TestCase):
  def setUp(self):
    self.driver = webdriver.Firefox()
    self.vars = {}
    self.data = self.random_register_data()
  
  def tearDown(self):
    self.driver.quit()
  
  def random_register_data(self):
    return (''.join(random.choices(string.ascii_uppercase + string.digits, k=8)))

  def test_functional(self):
    self.driver.get("http://localhost:8000/")
    self.driver.set_window_size(686, 819)
    self.driver.find_element(By.LINK_TEXT, "Register").click()
    self.driver.find_element(By.NAME, "username").send_keys(self.data)
    self.driver.find_element(By.NAME, "firstname").send_keys(self.data)
    self.driver.find_element(By.NAME, "lastname").send_keys(self.data)
    self.driver.find_element(By.NAME, "psw").click()
    self.driver.find_element(By.NAME, "psw").click()
    element = self.driver.find_element(By.NAME, "psw")
    actions = ActionChains(self.driver)
    actions.double_click(element).perform()
    self.driver.find_element(By.NAME, "psw").send_keys(self.data)
    self.driver.find_element(By.CSS_SELECTOR, ".btn").click()
    self.driver.find_element(By.CSS_SELECTOR, ".carousel-control-next").click()
    time.sleep(1)
    self.driver.find_element(By.CSS_SELECTOR, ".main-squad > .mask > .text-center").click()
    time.sleep(1)
    self.driver.find_element(By.CSS_SELECTOR, ".carousel-control-next-icon").click()
    time.sleep(1)
    self.driver.find_element(By.CSS_SELECTOR, ".goal-squad > .mask > .text-center").click()
    time.sleep(1)
    self.driver.find_element(By.NAME, "striker[]")
    self.driver.find_element(By.NAME, "striker[]").send_keys("Robert Lewandowski")
    self.driver.find_element(By.CSS_SELECTOR, ".justify-content-md-evenly > .p-2:nth-child(2) > .p-2").send_keys("Lionel Messi")
    self.driver.find_element(By.NAME, "middlefielder[]").send_keys("Paul Pogba")
    self.driver.find_element(By.CSS_SELECTOR, ".d-flex:nth-child(2) > .col-md-2:nth-child(2) > .p-2").send_keys("Toni Kroos")
    self.driver.find_element(By.CSS_SELECTOR, ".d-flex:nth-child(2) > .col-md-2:nth-child(4) > .p-2").send_keys("Luka Modric")
    self.driver.find_element(By.CSS_SELECTOR, ".d-flex:nth-child(2) > .col-md-2:nth-child(3) > .p-2").send_keys("Bruno Fernandes")
    self.driver.find_element(By.NAME, "defender[]").send_keys("Virgil van Dijk")
    self.driver.find_element(By.CSS_SELECTOR, ".d-flex:nth-child(3) > .col-md-2:nth-child(2) > .p-2").send_keys("Giorgio Chiellini")
    self.driver.find_element(By.CSS_SELECTOR, ".d-flex:nth-child(3) > .col-md-2:nth-child(3) > .p-2").send_keys("Sergio Ramos")
    self.driver.find_element(By.CSS_SELECTOR, ".d-flex:nth-child(3) > .col-md-2:nth-child(4) > .p-2").send_keys("Gerard PiquÃ©")
    element = self.driver.find_element(By.NAME, "goalkeeper")
    actions = ActionChains(self.driver)
    actions.double_click(element).perform()
    self.driver.find_element(By.NAME, "goalkeeper").send_keys("Manuel Neuer")
    time.sleep(1)
    element = self.driver.find_element(By.XPATH, "/html/body/form/section/button")
    self.driver.execute_script("arguments[0].scrollIntoView({block: 'center', inline: 'center'});", element)
    time.sleep(1)
    self.driver.find_element(By.XPATH, "/html/body/form/section/button").click()
    self.driver.find_element(By.LINK_TEXT, "Quiz").click()
    self.driver.find_element(By.LINK_TEXT, "Club").click()
    self.driver.find_element(By.ID, "Most Home Goal").click()
    dropdown = self.driver.find_element(By.ID, "Most Home Goal")
    dropdown.find_element(By.XPATH, "//option[. = '1899 HOFFENHEIM']").click()
    self.driver.find_element(By.CSS_SELECTOR, "#Most\\ Home\\ Goal > option:nth-child(2)").click()
    self.driver.find_element(By.ID, "Most Away Goal").click()
    dropdown = self.driver.find_element(By.ID, "Most Away Goal")
    dropdown.find_element(By.XPATH, "//option[. = '1899 HOFFENHEIM']").click()
    self.driver.find_element(By.CSS_SELECTOR, "#Most\\ Away\\ Goal > option:nth-child(2)").click()
    self.driver.find_element(By.ID, "Most Goal").click()
    dropdown = self.driver.find_element(By.ID, "Most Goal")
    dropdown.find_element(By.XPATH, "//option[. = '1899 HOFFENHEIM']").click()
    self.driver.find_element(By.CSS_SELECTOR, "#Most\\ Goal > option:nth-child(2)").click()
    self.driver.find_element(By.ID, "Most Penalty Scored").click()
    dropdown = self.driver.find_element(By.ID, "Most Penalty Scored")
    dropdown.find_element(By.XPATH, "//option[. = '1899 HOFFENHEIM']").click()
    self.driver.find_element(By.CSS_SELECTOR, "#Most\\ Penalty\\ Scored > option:nth-child(2)").click()
    self.driver.execute_script(f"window.scrollBy(0, 200);")
    time.sleep(1)
    self.driver.find_element(By.ID, "Most Won").click()
    dropdown = self.driver.find_element(By.ID, "Most Won")
    dropdown.find_element(By.XPATH, "//option[. = '1899 HOFFENHEIM']").click()
    self.driver.find_element(By.CSS_SELECTOR, "#Most\\ Won > option:nth-child(2)").click()
    self.driver.execute_script(f"window.scrollBy(0, 300);")
    time.sleep(1)
    self.driver.find_element(By.ID, "Most Draw").click()
    dropdown = self.driver.find_element(By.ID, "Most Draw")
    wait = WebDriverWait(self.driver, 10)
    second_option = wait.until(EC.element_to_be_clickable((By.CSS_SELECTOR, "#Most\\ Draw > option:nth-child(2)")))
    second_option.click()
    time.sleep(1)
    self.driver.find_element(By.CSS_SELECTOR, ".btn").click()
    time.sleep(1)
    self.driver.find_element(By.LINK_TEXT, "Rank").click()
    time.sleep(1)
    self.driver.find_element(By.LINK_TEXT, "Best of all").click()
    time.sleep(1)
    self.driver.find_element(By.LINK_TEXT, "N8X8M15F").click()
    self.driver.find_element(By.LINK_TEXT, f'{self.data}').click()
    self.driver.close()